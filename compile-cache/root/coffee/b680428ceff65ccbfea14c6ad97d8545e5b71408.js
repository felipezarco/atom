(function() {
  var RailsUtil, path;

  path = require('path');

  module.exports = RailsUtil = (function() {
    function RailsUtil() {}

    RailsUtil.prototype.isController = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'controllers')) !== -1 && filePath.search(/_controller\.rb$/) !== -1;
    };

    RailsUtil.prototype.isView = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'views')) !== -1;
    };

    RailsUtil.prototype.isTest = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('test')) !== -1 && filePath.search(/_test\.rb$/) !== -1;
    };

    RailsUtil.prototype.isSpec = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('spec')) !== -1 && filePath.search(/_spec\.rb$/) !== -1;
    };

    RailsUtil.prototype.isHelper = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'helpers')) !== -1 && filePath.search(/_helper\.rb$/) !== -1;
    };

    RailsUtil.prototype.isModel = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'models')) !== -1 && filePath.search(/\.rb$/) !== -1;
    };

    RailsUtil.prototype.isAsset = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'assets')) !== -1;
    };

    RailsUtil.prototype.isMailer = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('app', 'mailers')) !== -1 && filePath.search(/_mailer\.rb$/) !== -1;
    };

    RailsUtil.prototype.isFactory = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).indexOf(path.join('spec', 'factories')) !== -1 && filePath.search(/\.rb$/) !== -1;
    };

    RailsUtil.prototype.isService = function(filePath) {
      return (filePath != null) && atom.project.relativize(filePath).search(RegExp(path.join('app', '\\w+'))) !== -1 && filePath.search(/\.rb$/) !== -1;
    };

    return RailsUtil;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvZmVsaXBlLy5hdG9tL3BhY2thZ2VzL3JhaWxzLXRyYW5zcG9ydGVyL2xpYi9yYWlscy11dGlsLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUE7O0VBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxNQUFSOztFQUVQLE1BQU0sQ0FBQyxPQUFQLEdBQ007Ozt3QkFDSixZQUFBLEdBQWMsU0FBQyxRQUFEO2FBQ1osa0JBQUEsSUFDQSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQWIsQ0FBd0IsUUFBeEIsQ0FBaUMsQ0FBQyxPQUFsQyxDQUEwQyxJQUFJLENBQUMsSUFBTCxDQUFVLEtBQVYsRUFBaUIsYUFBakIsQ0FBMUMsQ0FBQSxLQUFnRixDQUFDLENBRGpGLElBRUEsUUFBUSxDQUFDLE1BQVQsQ0FBZ0Isa0JBQWhCLENBQUEsS0FBeUMsQ0FBQztJQUg5Qjs7d0JBS2QsTUFBQSxHQUFRLFNBQUMsUUFBRDthQUNOLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLE9BQWpCLENBQTFDLENBQUEsS0FBMEUsQ0FBQztJQUZyRTs7d0JBSVIsTUFBQSxHQUFRLFNBQUMsUUFBRDthQUNOLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxNQUFWLENBQTFDLENBQUEsS0FBa0UsQ0FBQyxDQURuRSxJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLFlBQWhCLENBQUEsS0FBbUMsQ0FBQztJQUg5Qjs7d0JBS1IsTUFBQSxHQUFRLFNBQUMsUUFBRDthQUNOLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxNQUFWLENBQTFDLENBQUEsS0FBa0UsQ0FBQyxDQURuRSxJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLFlBQWhCLENBQUEsS0FBbUMsQ0FBQztJQUg5Qjs7d0JBS1IsUUFBQSxHQUFVLFNBQUMsUUFBRDthQUNSLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFNBQWpCLENBQTFDLENBQUEsS0FBNEUsQ0FBQyxDQUQ3RSxJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLGNBQWhCLENBQUEsS0FBcUMsQ0FBQztJQUg5Qjs7d0JBS1YsT0FBQSxHQUFTLFNBQUMsUUFBRDthQUNQLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFFBQWpCLENBQTFDLENBQUEsS0FBMkUsQ0FBQyxDQUQ1RSxJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLE9BQWhCLENBQUEsS0FBOEIsQ0FBQztJQUh4Qjs7d0JBS1QsT0FBQSxHQUFTLFNBQUMsUUFBRDthQUNQLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFFBQWpCLENBQTFDLENBQUEsS0FBMkUsQ0FBQztJQUZyRTs7d0JBSVQsUUFBQSxHQUFVLFNBQUMsUUFBRDthQUNSLGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFNBQWpCLENBQTFDLENBQUEsS0FBNEUsQ0FBQyxDQUQ3RSxJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLGNBQWhCLENBQUEsS0FBcUMsQ0FBQztJQUg5Qjs7d0JBS1YsU0FBQSxHQUFXLFNBQUMsUUFBRDthQUNULGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsT0FBbEMsQ0FBMEMsSUFBSSxDQUFDLElBQUwsQ0FBVSxNQUFWLEVBQWtCLFdBQWxCLENBQTFDLENBQUEsS0FBK0UsQ0FBQyxDQURoRixJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLE9BQWhCLENBQUEsS0FBOEIsQ0FBQztJQUh0Qjs7d0JBS1gsU0FBQSxHQUFXLFNBQUMsUUFBRDthQUNULGtCQUFBLElBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFiLENBQXdCLFFBQXhCLENBQWlDLENBQUMsTUFBbEMsQ0FBeUMsTUFBQSxDQUFPLElBQUksQ0FBQyxJQUFMLENBQVUsS0FBVixFQUFpQixNQUFqQixDQUFQLENBQXpDLENBQUEsS0FBZ0YsQ0FBQyxDQURqRixJQUVBLFFBQVEsQ0FBQyxNQUFULENBQWdCLE9BQWhCLENBQUEsS0FBOEIsQ0FBQztJQUh0Qjs7Ozs7QUEvQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJwYXRoID0gcmVxdWlyZSAncGF0aCdcblxubW9kdWxlLmV4cG9ydHMgPVxuY2xhc3MgUmFpbHNVdGlsXG4gIGlzQ29udHJvbGxlcjogKGZpbGVQYXRoKSAtPlxuICAgIGZpbGVQYXRoPyBhbmRcbiAgICBhdG9tLnByb2plY3QucmVsYXRpdml6ZShmaWxlUGF0aCkuaW5kZXhPZihwYXRoLmpvaW4oJ2FwcCcsICdjb250cm9sbGVycycpKSBpc250IC0xIGFuZFxuICAgIGZpbGVQYXRoLnNlYXJjaCgvX2NvbnRyb2xsZXJcXC5yYiQvKSBpc250IC0xXG5cbiAgaXNWaWV3OiAoZmlsZVBhdGgpIC0+XG4gICAgZmlsZVBhdGg/IGFuZFxuICAgIGF0b20ucHJvamVjdC5yZWxhdGl2aXplKGZpbGVQYXRoKS5pbmRleE9mKHBhdGguam9pbignYXBwJywgJ3ZpZXdzJykpIGlzbnQgLTFcblxuICBpc1Rlc3Q6IChmaWxlUGF0aCkgLT5cbiAgICBmaWxlUGF0aD8gYW5kXG4gICAgYXRvbS5wcm9qZWN0LnJlbGF0aXZpemUoZmlsZVBhdGgpLmluZGV4T2YocGF0aC5qb2luKCd0ZXN0JykpIGlzbnQgLTEgYW5kXG4gICAgZmlsZVBhdGguc2VhcmNoKC9fdGVzdFxcLnJiJC8pIGlzbnQgLTFcblxuICBpc1NwZWM6IChmaWxlUGF0aCkgLT5cbiAgICBmaWxlUGF0aD8gYW5kXG4gICAgYXRvbS5wcm9qZWN0LnJlbGF0aXZpemUoZmlsZVBhdGgpLmluZGV4T2YocGF0aC5qb2luKCdzcGVjJykpIGlzbnQgLTEgYW5kXG4gICAgZmlsZVBhdGguc2VhcmNoKC9fc3BlY1xcLnJiJC8pIGlzbnQgLTFcblxuICBpc0hlbHBlcjogKGZpbGVQYXRoKSAtPlxuICAgIGZpbGVQYXRoPyBhbmRcbiAgICBhdG9tLnByb2plY3QucmVsYXRpdml6ZShmaWxlUGF0aCkuaW5kZXhPZihwYXRoLmpvaW4oJ2FwcCcsICdoZWxwZXJzJykpIGlzbnQgLTEgYW5kXG4gICAgZmlsZVBhdGguc2VhcmNoKC9faGVscGVyXFwucmIkLykgaXNudCAtMVxuXG4gIGlzTW9kZWw6IChmaWxlUGF0aCkgLT5cbiAgICBmaWxlUGF0aD8gYW5kXG4gICAgYXRvbS5wcm9qZWN0LnJlbGF0aXZpemUoZmlsZVBhdGgpLmluZGV4T2YocGF0aC5qb2luKCdhcHAnLCAnbW9kZWxzJykpIGlzbnQgLTEgYW5kXG4gICAgZmlsZVBhdGguc2VhcmNoKC9cXC5yYiQvKSBpc250IC0xXG5cbiAgaXNBc3NldDogKGZpbGVQYXRoKSAtPlxuICAgIGZpbGVQYXRoPyBhbmRcbiAgICBhdG9tLnByb2plY3QucmVsYXRpdml6ZShmaWxlUGF0aCkuaW5kZXhPZihwYXRoLmpvaW4oJ2FwcCcsICdhc3NldHMnKSkgaXNudCAtMVxuXG4gIGlzTWFpbGVyOiAoZmlsZVBhdGgpIC0+XG4gICAgZmlsZVBhdGg/IGFuZFxuICAgIGF0b20ucHJvamVjdC5yZWxhdGl2aXplKGZpbGVQYXRoKS5pbmRleE9mKHBhdGguam9pbignYXBwJywgJ21haWxlcnMnKSkgaXNudCAtMSBhbmRcbiAgICBmaWxlUGF0aC5zZWFyY2goL19tYWlsZXJcXC5yYiQvKSBpc250IC0xXG5cbiAgaXNGYWN0b3J5OiAoZmlsZVBhdGgpIC0+XG4gICAgZmlsZVBhdGg/IGFuZFxuICAgIGF0b20ucHJvamVjdC5yZWxhdGl2aXplKGZpbGVQYXRoKS5pbmRleE9mKHBhdGguam9pbignc3BlYycsICdmYWN0b3JpZXMnKSkgaXNudCAtMSBhbmRcbiAgICBmaWxlUGF0aC5zZWFyY2goL1xcLnJiJC8pIGlzbnQgLTFcblxuICBpc1NlcnZpY2U6IChmaWxlUGF0aCkgLT5cbiAgICBmaWxlUGF0aD8gYW5kXG4gICAgYXRvbS5wcm9qZWN0LnJlbGF0aXZpemUoZmlsZVBhdGgpLnNlYXJjaChSZWdFeHAocGF0aC5qb2luKCdhcHAnLCAnXFxcXHcrJykpKSBpc250IC0xIGFuZFxuICAgIGZpbGVQYXRoLnNlYXJjaCgvXFwucmIkLykgaXNudCAtMVxuIl19
